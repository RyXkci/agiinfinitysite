---
import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap"
      rel="stylesheet"
    />
    <title>Astro</title>
    <style>
      /*  SVG STUFF */

      #scroller {
        position: fixed;
        height: 100vh;
        inset: 0;
        z-index: 9999;
        /* mix-blend-mode: screen; */
        pointer-events: none;
      }
      .scroller-inner {
        height: 100%;
        width: 100%;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 50px 1fr;
        place-items: center;
      }

      .scroller-inner .lines-container {
        grid-area: 1/1;
        grid-row: 2;
        /* width: 300px; */
        /* height: 400px; */
        /* opacity: 0; */
      }

      .scroller-inner .gradient-container {
        grid-area: 1/1;
        grid-row: 2;
        height: 400px;
        width: 100%;
        z-index: 2;
        transform: translateY(70%);
      }

      .gradient {
        opacity: 0.5;
      }
      svg {
        height: 100%;
        width: 100%;
      }

      /* .line {
        opacity: 0.5;
      } */
      /* #svg-container.svg-center {
        display: grid;
        place-items: center;
      } */

      /* .dot {
        fill: #00d4ff;
        filter: drop-shadow(0 0 3px rgba(0, 188, 212, 0.5));
      }
      #circleGroup {
        transform-origin: center;
      } */

      .hero-inner {
        height: 100%;
        width: 100%;
        display: grid;
        place-items: center;
        position: relative;
      }

      /* .hero-one::before {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        margin-inline: auto;
        width: fit-content;
        width: 300px;
        height: 300px;
        background: var(--hero-pseudo-before-bg);
        filter: blur(100px);
        z-index: 2;

        border-radius: 50%;
        transform: scale(var(--hero-pseudo-before-scale));
      } */

      /* .hero-one::after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        margin-inline: auto;
        width: fit-content;
        height: 100%;
        border-radius: 50%;
        border: 1px solid red;
        width: var(--hero-pseudo-after-width);
        background: var(--hero-pseudo-after-bg);
        background-color: rgba(255, 215, 0, 0.5);
        transform: rotate(var(--hero-pseudo-after-rotate))
          scale(var(--hero-pseudo-after-scale));

        transform-origin: center;
        filter: blur(10px);
        mix-blend-mode: screen;
      } */

      @media screen and (min-width: 600px) {
        .hero-inner {
          height: 100%;
          width: 50%;
          display: grid;
          grid-template-columns: 1fr;
          grid-template-rows: 1fr 400px 1fr;
        }
      }
      .hero {
        position: sticky;
        top: 0;
        height: 100vh;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        background: #00a4cb;
        background: radial-gradient(
          circle,
          rgba(0, 164, 203, 1) 0%,
          rgba(15, 20, 39, 1) 30%
        );
      }

      .hero-title {
        font-family: "Plus Jakarta Sans", sans-serif;
        font-optical-sizing: auto;
        font-size: 5rem;
        grid-column: 1/1;
        grid-row: 1;
        /* width: 100%; pushing it to side of grid column */
        /* opacity: 0; */
      }
      /* .hero-subtitle {
        font-family: "JetBrains Mono", monospace;
        font-size: 1.75rem;
        grid-column: 1/1;
        grid-row: 2;
        width: 100%; /*pushing it to side of grid column 
        opacity: 0;
      }

      .hero-subtitle span {
        display: block;
      } */

      .hero-descr {
        font-size: 1.75rem;
        grid-column: 1/1;
        grid-row: 2;
        width: 100%;
        opacity: 0;
      }

      .hero-descr span {
        color: #00ffff;
      }

      .hero-statement {
        font-family: "JetBrains Mono", monospace;
        font-optical-sizing: auto;
        font-size: 4rem;
        color: #ffd700;
        grid-column: 1/3;
        grid-row: 3;
        width: 100%; /*pushing it to side of grid column */
        text-align: center;
        /* opacity: 0; */
      }

      .waves {
        opacity: 0;
      }

      .hero-chip-img-container {
        /* grid-column: 2/3; */

        grid-area: 1/1;
        grid-row: 2;
        height: 170px;
        width: 150px;
        background-image: url("../images/microchip.png");
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
        z-index: 2;
        /* transform: scale(0); */
        opacity: 0;
        transform-origin: center;
      }

      .hero-wave-img-container {
        /* grid-column: 2/3;*/

        grid-area: 1/1;
        grid-row: 2;
        height: 200px;
        width: 300px;
        background-image: url("../images/wave-microchip.png");
        background-repeat: no-repeat;
        background-size: contain;
        z-index: 2;
        opacity: 0;
        transform-origin: center;
      }

      .scroller-rotate-trigger {
        position: sticky;
        top: 0;
        height: 100vh;
        /* border: 5px solid red; */
      }
      .wave-img-trigger {
        position: sticky;
        top: 0;
        height: 100vh;
        /* border: 5px solid blue; */
        /* background: blue; */
      }
      .hero2-trigger {
        position: sticky;
        top: 0;
        height: 100vh;
        /* border: 5px solid blue; */
        /* background: blue; */
      }
    </style>
  </head>
  <body>
   
    <div class="hero">
      <div class="hero-inner">
        <h1 class="hero-title fade-from-above">NANNI-O</h1>
        <!-- <p class="hero-subtitle fade-from-above">
          <span>Nano</span>
          <span>Artificial</span>
          <span>Neural</span>
          <span>Network</span>
          <span>Optical</span>
        </p>
        <p class="hero-descr">
          Volumetric Holographic Nano <span>Optical</span> conductors and <span
            >transistors</span
          >
        </p> -->
        <p class="hero-statement wires">From wires</p>
        <p class="hero-statement waves">To waves</p>
      </div>
    </div>
     <div id="scroller" class="scroller-center">
      <div class="scroller-inner">
        <div class="lines-container">
          <svg
            width="974"
            height="437"
            viewBox="0 0 974 437"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle cx="66.5" cy="119.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="231.5" cy="22.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="720.5" cy="21.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="63.5" cy="285.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="903.5" cy="121.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M67 120L227 120L269 165H386" stroke="#00A4CB" class="line"
            ></path>
            <path d="M901 121H739L711 164H591" stroke="#00A4CB" class="line"
            ></path>
            <path d="M223 163L123 163" stroke="#00A4CB" class="line"></path>
            <path d="M846 172H746" stroke="#00A4CB" class="line"></path>
            <circle cx="125.5" cy="162.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="743.5" cy="171.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="225.5" cy="162.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="845.5" cy="172.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="2.5" cy="219.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path
              d="M391 194L227.848 194L207.951 216.979L6 218"
              stroke="#00A4CB"
              class="line"></path>
            <circle cx="971.5" cy="219.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M591 198.5H741L779 217H974" stroke="#00A4CB" class="line"
            ></path>
            <circle cx="230.5" cy="220.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="125.5" cy="238.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M231 218L211 238H128" stroke="#00A4CB" class="line"></path>
            <circle cx="312.5" cy="220.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M312 220H387" stroke="#00A4CB" class="line"></path>
            <path d="M592 220H667" stroke="#00A4CB" class="line"></path>
            <circle cx="666.5" cy="220.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="740.5" cy="220.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="848.5" cy="237.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M742 223L770 237H846" stroke="#00A4CB" class="line"></path>
            <path
              d="M387.998 255.5L259 255.5L222 285L63.9982 285"
              stroke="#00A4CB"
              class="line"></path>
            <path
              d="M590.996 254H720L756 283H914.906"
              stroke="#00A4CB"
              class="line"></path>
            <circle cx="917.5" cy="285.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="133.5" cy="357.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="844.5" cy="358.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path
              d="M389 296.498L255 296.498L133 358"
              stroke="#00A4CB"
              class="line"></path>
            <path d="M592 296H721L843 358" stroke="#00A4CB" class="line"></path>
            <circle cx="285.5" cy="351.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="234.5" cy="397.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="704.5" cy="351.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path
              d="M363 313L335 351.354L286.354 351.354"
              stroke="#00A4CB"
              class="line"></path>
            <path d="M621 316L659 351H702" stroke="#00A4CB" class="line"></path>
            <path
              d="M393.209 325.454L340 397.454L237.209 397.454"
              stroke="#00A4CB"
              class="line"></path>
            <circle cx="742.5" cy="397.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path
              d="M587.201 328.542L641 397.542L744.201 397.542"
              stroke="#00A4CB"
              class="line"></path>
            <circle cx="444.5" cy="422.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="547.5" cy="422.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <line
              x1="445"
              y1="316.998"
              x2="445"
              y2="420.002"
              stroke="#00A4CB"
              class="line"></line>
            <line
              x1="547.5"
              y1="317"
              x2="547.5"
              y2="420.005"
              stroke="#00A4CB"
              class="line"></line>
            <path
              d="M233.115 25.1318L271.115 70.1037L321.116 70.1037L386.27 110.546"
              stroke="#00A4CB"
              class="line"></path>
            <path
              d="M579.654 116.639L630.154 68.1394L687 68.1394L721 22"
              stroke="#00A4CB"
              class="line"></path>
            <circle cx="446.5" cy="24.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <circle cx="545.5" cy="25.5" r="2.5" fill="#00A4CB" class="dot"
            ></circle>
            <path d="M446.5 27L446.5 68L446.5 119" stroke="#00A4CB" class="line"
            ></path>
            <path d="M545 28L545 69L545 120" stroke="#00A4CB" class="line"
            ></path>
          </svg>
        </div>
        <div class="gradient-container">
          <svg
            class="gradient"
            width="1983"
            height="700"
            viewBox="0 0 1983 700"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g id="Group 4">
              <g id="Group 1">
                <g id="bottom" filter="url(#filter0_di_24_35)">
                  <circle
                    cx="977"
                    cy="350"
                    r="250"
                    fill="#00A4CB"
                    fill-opacity="0.01"
                    shape-rendering="crispEdges"></circle>
                </g>
                <mask
                  id="mask0_24_35"
                  style="mask-type:alpha"
                  maskUnits="userSpaceOnUse"
                  x="727"
                  y="100"
                  width="500"
                  height="500"
                >
                  <circle id="mask" cx="977" cy="350" r="250" fill="#00A4CB"
                  ></circle>
                </mask>
                <g mask="url(#mask0_24_35)">
                  <g id="top" filter="url(#filter1_f_24_35)">
                    <circle cx="977" cy="350" r="75" fill="#00A4CB"></circle>
                  </g>
                </g>
              </g>
              <g id="Group 2">
                <g
                  id="Line 1"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter2_f_24_35)"
                >
                  <line
                    x1="914"
                    y1="348.5"
                    x2="50"
                    y2="348.5"
                    stroke="url(#paint0_linear_24_35)"
                    stroke-width="9"></line>
                </g>
                <g
                  id="Line 2"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter3_f_24_35)"
                >
                  <line
                    x1="914"
                    y1="348.5"
                    x2="50"
                    y2="348.5"
                    stroke="url(#paint1_linear_24_35)"
                    stroke-width="9"></line>
                </g>
                <g
                  id="Rectangle 4"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter4_f_24_35)"
                >
                  <rect
                    x="50"
                    y="332"
                    width="864"
                    height="35"
                    fill="url(#paint2_linear_24_35)"
                    fill-opacity="0.8"></rect>
                </g>
              </g>
              <g id="Group 3">
                <g
                  id="Line 1_2"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter5_f_24_35)"
                >
                  <line
                    y1="-4.5"
                    x2="864"
                    y2="-4.5"
                    transform="matrix(1 -8.74228e-08 -8.74228e-08 -1 1069 344)"
                    stroke="url(#paint3_linear_24_35)"
                    stroke-width="9"></line>
                </g>
                <g
                  id="Line 2_2"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter6_f_24_35)"
                >
                  <line
                    y1="-4.5"
                    x2="864"
                    y2="-4.5"
                    transform="matrix(1 -8.74228e-08 -8.74228e-08 -1 1069 344)"
                    stroke="url(#paint4_linear_24_35)"
                    stroke-width="9"></line>
                </g>
                <g
                  id="Rectangle 4_2"
                  style="mix-blend-mode:plus-lighter"
                  filter="url(#filter7_f_24_35)"
                >
                  <rect
                    width="864"
                    height="35"
                    transform="matrix(-1 0 0 1 1933 332)"
                    fill="url(#paint5_linear_24_35)"
                    fill-opacity="0.8"></rect>
                </g>
              </g>
              <g id="Ellipse 3" filter="url(#filter8_di_24_35)">
                <circle
                  cx="977"
                  cy="350"
                  r="160"
                  fill="#00A4CB"
                  fill-opacity="0.1"
                  shape-rendering="crispEdges"></circle>
              </g>
            </g>
            <defs>
              <filter
                id="filter0_di_24_35"
                x="627"
                y="0"
                width="700"
                height="700"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feColorMatrix
                  in="SourceAlpha"
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                  result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="50"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="out"></feComposite>
                <feColorMatrix
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0.643137 0 0 0 0 0.796078 0 0 0 1 0"
                ></feColorMatrix>
                <feBlend
                  mode="normal"
                  in2="BackgroundImageFix"
                  result="effect1_dropShadow_24_35"></feBlend>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="effect1_dropShadow_24_35"
                  result="shape"></feBlend>
                <feColorMatrix
                  in="SourceAlpha"
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                  result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="32.5"></feGaussianBlur>
                <feComposite
                  in2="hardAlpha"
                  operator="arithmetic"
                  k2="-1"
                  k3="1"></feComposite>
                <feColorMatrix
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0.643137 0 0 0 0 0.796078 0 0 0 1 0"
                ></feColorMatrix>
                <feBlend
                  mode="normal"
                  in2="shape"
                  result="effect2_innerShadow_24_35"></feBlend>
              </filter>
              <filter
                id="filter1_f_24_35"
                x="837"
                y="210"
                width="280"
                height="280"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="32.5"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter2_f_24_35"
                x="42"
                y="336"
                width="880"
                height="25.0001"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="4"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter3_f_24_35"
                x="34"
                y="328"
                width="896"
                height="41.0001"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="8"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter4_f_24_35"
                x="0"
                y="282"
                width="964"
                height="135"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="25"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter5_f_24_35"
                x="1061"
                y="336"
                width="880"
                height="25.0001"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="4"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter6_f_24_35"
                x="1053"
                y="328"
                width="896"
                height="41.0001"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="8"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter7_f_24_35"
                x="1019"
                y="282"
                width="964"
                height="135"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="BackgroundImageFix"
                  result="shape"></feBlend>
                <feGaussianBlur
                  stdDeviation="25"
                  result="effect1_foregroundBlur_24_35"></feGaussianBlur>
              </filter>
              <filter
                id="filter8_di_24_35"
                x="667"
                y="40"
                width="620"
                height="620"
                filterUnits="userSpaceOnUse"
                color-interpolation-filters="sRGB"
              >
                <feFlood flood-opacity="0" result="BackgroundImageFix"
                ></feFlood>
                <feColorMatrix
                  in="SourceAlpha"
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                  result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="75"></feGaussianBlur>
                <feComposite in2="hardAlpha" operator="out"></feComposite>
                <feColorMatrix
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0.643137 0 0 0 0 0.796078 0 0 0 1 0"
                ></feColorMatrix>
                <feBlend
                  mode="normal"
                  in2="BackgroundImageFix"
                  result="effect1_dropShadow_24_35"></feBlend>
                <feBlend
                  mode="normal"
                  in="SourceGraphic"
                  in2="effect1_dropShadow_24_35"
                  result="shape"></feBlend>
                <feColorMatrix
                  in="SourceAlpha"
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                  result="hardAlpha"></feColorMatrix>
                <feOffset></feOffset>
                <feGaussianBlur stdDeviation="50"></feGaussianBlur>
                <feComposite
                  in2="hardAlpha"
                  operator="arithmetic"
                  k2="-1"
                  k3="1"></feComposite>
                <feColorMatrix
                  type="matrix"
                  values="0 0 0 0 0 0 0 0 0 0.643137 0 0 0 0 0.796078 0 0 0 1 0"
                ></feColorMatrix>
                <feBlend
                  mode="normal"
                  in2="shape"
                  result="effect2_innerShadow_24_35"></feBlend>
              </filter>
              <linearGradient
                id="paint0_linear_24_35"
                x1="50"
                y1="343.5"
                x2="914"
                y2="343.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
              <linearGradient
                id="paint1_linear_24_35"
                x1="50"
                y1="343.5"
                x2="914"
                y2="343.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
              <linearGradient
                id="paint2_linear_24_35"
                x1="50"
                y1="349.5"
                x2="914"
                y2="349.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
              <linearGradient
                id="paint3_linear_24_35"
                x1="864"
                y1="0.5"
                x2="0"
                y2="0.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
              <linearGradient
                id="paint4_linear_24_35"
                x1="864"
                y1="0.5"
                x2="0"
                y2="0.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
              <linearGradient
                id="paint5_linear_24_35"
                x1="0"
                y1="17.5"
                x2="864"
                y2="17.5"
                gradientUnits="userSpaceOnUse"
              >
                <stop stop-color="#00A4CB" stop-opacity="0"></stop>
                <stop offset="1" stop-color="#00A4CB"></stop>
              </linearGradient>
            </defs>
          </svg>
        </div>

        <div class="hero-chip-img-container"></div>
        <div class="hero-wave-img-container"></div>
      </div>
    </div>
    <div class="scroller-rotate-trigger"></div>
    <div class="wave-img-trigger"></div>
    <div class="hero2-trigger"></div>

    <script>
      import {
        animate,
        svg,
        eases,
        createTimeline,
        createTimer,
        utils,
        text,
        stagger,
        onScroll,
      } from "animejs";

      // SOME SETUP //
      utils.set(".hero-chip-img-container", {
        opacity: 0,
      });

      utils.set(".hero-wave-img-container", {
        scale: 1.3,
      });

      // utils.set(".gradient", {
      //   translateY: "100px",
      // });

      const conicHerobgYellow =
        "conic-gradient(from 0deg, transparent 0 22%, rgba(255, 215, 0, .2) 22% 27%, transparent 27% 49%, rgba(255, 215, 0, .2) 49% 53%, transparent 53% 78%, rgba(255, 215, 0, .2) 78% 82%, transparent 82% 100%)";
      const conicHerobgBlue =
        "conic-gradient(from 0deg, transparent 0 22%, rgba(0, 255, 255, .2) 22% 27%, transparent 27% 49%, rgba(0, 255, 255, .2) 49% 53%, transparent 53% 78%, rgba(0, 255, 255, .2) 78% 82%, transparent 82% 100%)";
      const radialHerobgYellow =
        "radial-gradient(circle 400px, #ffd700eb, #000814)";
      const radialHerobgBlue =
        "radial-gradient(circle 400px, #00FFFFe, #000814)";

      // text.split(".hero-one", {
      //   chars: { class: "fade-from-above" },
      // });

      //    END SETUP //

      // const lineAnimate = animate(svg.createDrawable(".line"), {
      //   // opacity: [0.5, 1],
      //   draw: ["0 0", "0 1"],
      //   // ease: "inOutQuad",
      //   duration: 2000,
      //   delay: stagger(100),
      //   reversed: true,
      //   loop: true
      // });

      // const heroImgtl = animate(".hero-chip-img-container", {
      //   // scale: {
      //   //   from: "0",
      //   //   duration: 2000,
      //   // },
      //   opacity: {
      //     to: "1",
      //     duration: 3000,
      //   },
      //   // rotate: {
      //   //   to: "1turn",
      //   //   duration: 2000,
      //   // },
      // });

      // const introLineAnimation = animate(".hero-one", {
      //   "--hero-pseudo-after-scale": {
      //     to: ".5",
      //     duration: 500,
      //   },
      // });

      // const heroTl = createTimeline()
      //   .sync(lineAnimate)
      //   .add(".hero-one", {
      //     "--hero-pseudo-after-width": {
      //       to: "700px",
      //     },
      //     "--hero-pseudo-after-bg": {
      //       to: conicHerobgYellow,
      //     },
      //     "--hero-pseudo-after-scale": {
      //       to: "1",
      //     },
      //     "--hero-pseudo-before-scale": {
      //       to: "1",
      //     },
      //   });

      // const heroTextAnim1 = animate(".fade-from-above", {
      //   opacity: [0, 1],
      //   y: [{ to: ["-100%", "0%"] }],
      //   duration: 750,
      //   ease: "out(3)",
      //   delay: stagger(50),
      //   loop: false,
      // });

      const heroTlMain = createTimeline()
        // .sync(lineAnimate)
        .add(".hero-chip-img-container", {
          scale: {
            from: "0",
            duration: 3000,
            composition: "blend",
          },
          opacity: {
            to: 1,
            duration: 3000,
            composition: "blend",
          },
          // rotate: {
          //   to: "1turn",
          //   duration: 2000,
          // },
        });

      // .sync(heroImgtl, "-=1000")
      // .sync(heroTextAnim1, "-=1000");

      const chipFadeOutAnimation = animate(".hero-chip-img-container", {
        rotate: {
          to: "1turn",
          duration: 5000,
        },
        // scale:
        //   [{ to: [1.5, 3] }],
        //   duration: 5000,
        //   // composition: 'blend',

        opacity: {
          to: [1, 0],
          duration: 5000,
        },
        autoplay: onScroll({
          container: ".svg-container",
          target: ".wave-img-trigger",
          enter: "bottom +=100",
          leave: "+=100 top",
          sync: true,
          // debug: true,
        }),
      });

      const waveImgAnimation = animate(".hero-wave-img-container", {
        opacity: {
          to: [0, 1],
          duration: 5000,
        },
        // scale: {
        //   from: 3,
        //   duration: 5000
        // },
        rotate: {
          to: "1turn",
          duration: 5000,
        },
        autoplay: onScroll({
          // container: ".svg-container",
          target: ".wave-img-trigger",
          enter: "bottom +=100",
          leave: "+=100 top",
          sync: true,
          // debug: true,
        }),
      });

      // const imgTransform = createTimeline()
      // .sync(waveImgAnimation)

      const scrolltl2 = createTimeline({
        autoplay: onScroll({
          // container: ".svg-container",
          target: ".hero2-trigger",
          enter: "bottom +=100",
          leave: "+=100 top",
          sync: true,
          // debug: true,
        }),
        // defaults: { duration: 3000 },
      })
        // .add(".hero-one", {
        //   "--hero-pseudo-before-bg": {
        //     to: radialHerobgBlue,
        //   },
        //   "--hero-pseudo-after-width": {
        //     to: "700px",
        //   },
        //   "--hero-pseudo-after-bg": {
        //     to: conicHerobgBlue,
        //   },
        //   "--hero-pseudo-after-scale": {
        //     to: "1",
        //   },
        //   "--hero-pseudo-before-scale": {
        //     to: "1",
        //   },
        // })
        .add(".hero-wave-img-container", {
          // x: "15rem",
          // y: "5rem",
          scale: {
            to: 1,
          },
          duration: 5000,
          delay: 7000,
          ease: "linear",
        })
        // .add(".hero-descr", {
        //   opacity: [0, 1],
        //   y: [{ to: ["-100%", "0%"] }],
        //   duration: 10000,
        //   ease: "linear",
        //   delay: stagger(50),
        //   loop: false,
        // })
        .add(".waves", {
          opacity: [0, 1],
          y: [{ to: ["-100%", "0%"] }],
          duration: 5000,
          ease: "linear",
          delay: stagger(50),
          loop: false,
        });

      const lineOutanimation = animate(".line", {
        opacity: [1, 0],
        duration: 2000,
        autoplay: false,
      });

      const lineDotAnimation = animate(".dot", {
        opacity: [1, 0],
        duration: 2000,
        autoplay: false,
      });

      const gradientMove = animate(".gradient", {
        translateY: "-70%",
        opacity: {
          to: 1,
        },
        duration: 3000,
        ease: "linear",
        autoplay: false,
      });

      const chipScale = animate(".hero-chip-img-container", {
        scale: [1, 1.5],
        composition: "blend",
        autoplay: false,
      });

      const scrollTl1 = createTimeline({
        autoplay: onScroll({
          // container: "#svg-container",
          target: ".scroller-rotate-trigger",
          enter: "bottom top",
          leave: "+=100 top",
          sync: true,
          // debug: true,
        }),
        defaults: { duration: 5000 },
      })
        .sync(lineOutanimation)
        .sync(lineDotAnimation)
        .sync(gradientMove)
        .sync(chipScale)
        .add(".wires", {
          opacity: {
            to: 0,
          },
        });

      // const scrolltl1 = createTimeline({
      //   autoplay: onScroll({
      //     // container: "#svg-container",
      //     target: ".scroller-rotate-trigger",
      //     enter: "bottom top",
      //     leave: "+=100 top",
      //     sync: true,
      //     // debug: true,
      //   }),
      //   defaults: { duration: 5000 },
      // })
      //   .add(".dot", {
      //     opacity: [1, 0],
      //   })
      //   // .add(".line", {
      //   //   opacity: [1, 0],
      //   // })
      //   // .add(".hero-one", {
      //   //   "--hero-pseudo-after-scale": {
      //   //     to: "0",
      //   //     duration: 3000,
      //   //   },
      //   //   "--hero-pseudo-before-scale": {
      //   //     to: "0",
      //   //   },
      //   // })
      //   // .add(".hero-title", {
      //   //   y: "50px",
      //   //   opacity: [1, 0],
      //   // })
      //   // .add(".hero-subtitle", {
      //   //   y: "15rem",
      //   //   scale: {
      //   //     to: "0",
      //   //     delay: 500,
      //   //   },
      //   //   opacity: [1, 0],
      //   // })
      //   // .add(".hero-chip-img-container", {
      //   //   scale: [1, 1.5],
      //   //   composition: "blend",
      //   // });

      // const scrollTlMain = createTimeline({ autoplay: false }).sync(scrolltl1);
      // .sync(scrolltl2);

      //     utils.set(".hero-one", {
      //   "--hero-pseudo-before-scale": "0",
      //   "--hero-pseudo-before-bg": radialHerobgYellow,
      //   "--hero-pseudo-after-rotate": "0deg",
      //   "--hero-pseudo-after-scale": "0",
      //   "--hero-pseudo-after-bg": "rgba(255, 215, 0, 0.5)",
      //   "--hero-pseudo-after-width": "5px",
      // });

      //        .add("#circleGroup", {
      //   ease: "linear",
      //   scale: "0",
      // })

      // .add(".hero-one", {
      //   "--hero-pseudo-after-scale": {
      //     to: "0",
      //     duration: 3000,
      //   },
      //   "--hero-pseudo-before-scale": {
      //     to: "0",
      //   },
      // })

      //   const heroBgAnimation = animate(".hero-one", {
      //   "--hero-pseudo-after-width": {
      //     to: "700px",
      //     delay: 1000
      //   },
      //   "--hero-pseudo-after-bg": {
      //     to: conicHerobg,
      //     delay: 1000
      //   },
      //   "--hero-pseudo-after-rotate": {
      //     to: "1turn",
      //     duration: 5000,
      //     delay: 1000
      //   },
      //   "--hero-pseudo-before-scale": {
      //     to: "1",
      //     delay: 5000
      //   },
      // });

      // const introImgAnimation = animate(".hero-chip-img-container", {
      //   scale: {
      //     from: "0",
      //     // duration: 3000,
      //   },
      //   rotate: {
      //     to: "1turn",
      //     // duration: 3000,
      //   },
      //   // delay: 500,
      // });

      // const heroIntrotl1 = createTimeline()
      // .sync(introImgAnimation, "+=500")
      // .sync(heroBgAnimation);

      // const heroConicRotate = createTimeline({ defaults: { delay: 1000 } }).add(
      //   ".hero-one",
      //   {
      //     "--hero-pseudo-after-rotate": {
      //       to: "1turn",
      //       duration: 5000,
      //     },
      //     loop: true,
      //     loopDelay: 0,
      //   }
      // );

      // const tlMain = createTimeline().sync(tl).sync(scrolltl1);

      // .add(".hero-chip-img-container", {
      //   scale: {
      //     from: "0",
      //   },
      //   rotate: {
      //     to: "360deg",
      //   },
      //   opacity: {
      //     to: "1",
      //   },
      //   delay: 500
      // });

      // const heroIntrotl2 = createTimeline().add(".hero-one", {
      //   // "--hero-pseudo-after-scale": {
      //   //   to: "1",
      //   // },
      //   "--hero-pseudo-after-rotate": {
      //     to: "1turn",
      //     duration: 20000,
      //     ease: "linear",
      //   },
      // });

      // const heroIntroMaintl = createTimeline()
      //   .sync(heroIntrotl1)
      //   .sync(heroIntrotl2, "+=1000");

      // const herointrotl2 = createTimeline({ defaults: { delay: 1000 } }).add(
      //   ".hero-one",
      //   {
      //     "--hero-pseudo-after-scale": {
      //       to: "1",
      //     },
      //     "--hero-pseudo-after-rotate": {
      //       to: "1turn",
      //       duration: 20000,
      //       ease: "linear",
      //     },
      //   }
      // );

      // const herotlMain = createTimeline().sync(herointrotl1).sync(herointrotl2);

      // .add(".circle-group", {
      //   opacity: 1,
      //   delay: stagger(500, { reversed: true }),
      //   duration: stagger(500, { start: 500 }),
      // })
      // .add('.hero-one::before', {
      //   scale: {
      //     from: '0',
      //     duration: 3000
      //   }
      // })
      // .add(
      //   ".hero-chip-img-container",
      //   {
      //     scale: {
      //       from: "0",
      //       duration: 3000,
      //     },
      //     rotate: {
      //       to: "360deg",
      //       duration: 5000,
      //     },
      //   },
      //   2000
      // );

      // .add(".circle-group", {
      //   rotate: "1turn",
      //   ease: "linear",
      //   autoplay: onScroll({
      //     container: ".svg-container",
      //     target: ".svg-rotate-trigger",
      //     enter: "bottom top",
      //     leave: "+=100 top",
      //     sync: true,
      //     debug: true,
      //   }),
      // });

      //  <svg
      //   width="716"
      //   height="584"
      //   viewBox="0 0 716 584"
      //   fill="none"
      //   xmlns="http://www.w3.org/2000/svg"
      // >
      //   <g id="circleGroup">
      //     <path
      //       class="circle"
      //       id="circle-3"
      //       d="M349 116.5C455.548 116.5 541.5 194.849 541.5 291C541.5 387.151 455.548 465.5 349 465.5C242.452 465.5 156.5 387.151 156.5 291C156.5 194.849 242.452 116.5 349 116.5Z"
      //       stroke="url(#paint0_linear_73_119)"
      //       stroke-opacity="0.27"
      //       stroke-width="3"></path>
      //     <path
      //       class="circle"
      //       id="circle-2"
      //       d="M348.5 66.5C489.627 66.5 603.5 167.737 603.5 292C603.5 416.263 489.627 517.5 348.5 517.5C207.373 517.5 93.5 416.263 93.5 292C93.5 167.737 207.373 66.5 348.5 66.5Z"
      //       stroke="url(#paint1_linear_73_119)"
      //       stroke-width="2"></path>
      //     <path
      //       class="circle"
      //       id="circle-1"
      //       d="M358 2.5C554.838 2.5 713.5 132.566 713.5 292C713.5 451.434 554.838 581.5 358 581.5C161.162 581.5 2.5 451.434 2.5 292C2.5 132.566 161.162 2.5 358 2.5Z"
      //       stroke="url(#paint2_linear_73_119)"
      //       stroke-width="1"></path>
      //   </g>
      //   <defs>
      //     <linearGradient
      //       id="paint0_linear_73_119"
      //       x1="349"
      //       y1="114"
      //       x2="349"
      //       y2="468"
      //       gradientUnits="userSpaceOnUse"
      //     >
      //       <stop stop-color="#FFD700"></stop>
      //       <stop offset="1" stop-color="#998100" stop-opacity="0.49"></stop>
      //     </linearGradient>
      //     <linearGradient
      //       id="paint1_linear_73_119"
      //       x1="348.5"
      //       y1="64"
      //       x2="348.5"
      //       y2="520"
      //       gradientUnits="userSpaceOnUse"
      //     >
      //       <stop stop-color="#FFD700"></stop>
      //       <stop offset="1" stop-color="#998100" stop-opacity="0.13"></stop>
      //     </linearGradient>
      //     <linearGradient
      //       id="paint2_linear_73_119"
      //       x1="358"
      //       y1="0"
      //       x2="358"
      //       y2="584"
      //       gradientUnits="userSpaceOnUse"
      //     >
      //       <stop stop-color="#FFD700"></stop>
      //       <stop offset="0.480769" stop-color="#998100" stop-opacity="0.17"
      //       ></stop>
      //     </linearGradient>
      //   </defs>
      // </svg>
    </script>
  </body>
</html>
