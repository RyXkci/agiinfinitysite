---
import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap"
      rel="stylesheet"
    />
    <title>Astro</title>
    <style>
      /*  SVG STUFF */

      #svg-container {
        position: fixed;
        height: 100vh;
        inset: 0;
        z-index: 9999;
        mix-blend-mode: screen;
      }

      #svg-container.svg-center {
        display: grid;
        place-items: center;
      }
      .dot {
        fill: #00d4ff;
        filter: drop-shadow(0 0 3px rgba(0, 188, 212, 0.5));
      }
      .circle-group {
        transform-origin: center;
        opacity: 0;
      }

      @keyframes rotate {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

      @media (max-width: 768px) {
        .dot {
          r: 1;
        }
      }

      .hero-one {
        height: 100%;
        width: 100%;
        display: grid;
        place-items: center;
        position: relative;
      }

      .hero-one::before {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        margin-inline: auto;
        width: fit-content;
        width: 300px;
        height: 300px;
        background: radial-gradient(circle 400px, #FFD700eb, #000814);
        filter: blur(100px);
        z-index: 2;

        border-radius: 50%;
      }
      @media screen and (min-width: 600px) {
        .hero-one {
          height: 70%;
          width: 80%;
          display: grid;
          grid-template-columns: 40% 1fr 100px 100px 1fr;
          grid-template-rows: 33% 1fr 1fr;
        }
      }
      .hero {
        position: sticky;
        top: 0;
        height: 100vh;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        /* background: #c2f9ff;
        background: radial-gradient(
          circle,
          rgba(194, 249, 255, 1) 2%,
          rgba(0, 212, 255, 1) 10%,
          rgba(26, 26, 46, 1) 32%
        ); */
        background: black;
        /* background-image: url('../images/hero-bg-1.jpg');
       background-position: center;
       background-size: contain; */
      }

      .hero-title {
        font-family: "Plus Jakarta Sans", sans-serif;
        font-optical-sizing: auto;
        font-size: 3rem;
        grid-column: 1/1;
        grid-row: 1;
        width: 100%; /*pushing it to side of grid column */
        opacity: 0;
      }
      .hero-subtitle {
        font-family: "JetBrains Mono", monospace;
        font-size: 1.75rem;
        grid-column: 1/1;
        grid-row: 2;
        width: 100%; /*pushing it to side of grid column */
        opacity: 0;
      }
      .hero-subtitle span {
        display: block;
      }

      .hero-statement {
        font-optical-sizing: auto;
        font-size: 3rem;
        color: #ffd700;
        grid-column: 1/3;
        grid-row: 3;
        width: 100%; /*pushing it to side of grid column */
        opacity: 0;
      }
      .hero-chip-img-container {
        grid-column: 2/3;
        grid-row: 2/3;
        height: 200px;
        width: 200px;
        background-image: url("../images/microchip.png");
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
        z-index: 2;
        transform: scale(0);
        /* opacity: 0; */
        transform-origin: center;
      }

      .hero-wave-img-container {
        grid-column: 4/-1;
        grid-row: 3/-1;
        height: 200px;
        width: 300px;
        background-image: url("../images/wave-microchip.png");
        background-repeat: no-repeat;
        background-size: contain;
        opacity: 0;
      }

      .svg-rotate-trigger {
        position: sticky;
        top: 0;
        height: 70vh;
        /* background: red; */
      }
    </style>
  </head>
  <body>
    <div id="svg-container" class="svg-center">
      <svg
        width="716"
        height="584"
        viewBox="0 0 716 584"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="Group 2">
          <path
            id="circle-3"
            d="M349 116.5C455.548 116.5 541.5 194.849 541.5 291C541.5 387.151 455.548 465.5 349 465.5C242.452 465.5 156.5 387.151 156.5 291C156.5 194.849 242.452 116.5 349 116.5Z"
            stroke="url(#paint0_linear_73_119)"
            stroke-opacity="0.27"
            stroke-width="3"></path>
          <path
            id="circle-2"
            d="M348.5 66.5C489.627 66.5 603.5 167.737 603.5 292C603.5 416.263 489.627 517.5 348.5 517.5C207.373 517.5 93.5 416.263 93.5 292C93.5 167.737 207.373 66.5 348.5 66.5Z"
            stroke="url(#paint1_linear_73_119)"
            stroke-width="2"></path>
          <path
            id="circle-1"
            d="M358 2.5C554.838 2.5 713.5 132.566 713.5 292C713.5 451.434 554.838 581.5 358 581.5C161.162 581.5 2.5 451.434 2.5 292C2.5 132.566 161.162 2.5 358 2.5Z"
            stroke="url(#paint2_linear_73_119)"
            stroke-width="1"></path>
        </g>
        <defs>
          <linearGradient
            id="paint0_linear_73_119"
            x1="349"
            y1="114"
            x2="349"
            y2="468"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#FFD700"></stop>
            <stop offset="1" stop-color="#998100" stop-opacity="0.49"></stop>
          </linearGradient>
          <linearGradient
            id="paint1_linear_73_119"
            x1="348.5"
            y1="64"
            x2="348.5"
            y2="520"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#FFD700"></stop>
            <stop offset="1" stop-color="#998100" stop-opacity="0.13"></stop>
          </linearGradient>
          <linearGradient
            id="paint2_linear_73_119"
            x1="358"
            y1="0"
            x2="358"
            y2="584"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#FFD700"></stop>
            <stop offset="0.480769" stop-color="#998100" stop-opacity="0.17"
            ></stop>
          </linearGradient>
        </defs>
      </svg>
    </div>
    <div class="hero">
      <div class="hero-one">
        <h1 class="hero-title">NANNI-O</h1>
        <p class="hero-subtitle">
          <span>Nano</span>
          <span>Artificial</span>
          <span>Neural</span>
          <span>Network</span>
          <span>Optical</span>
        </p>
        <p class="hero-statement">From wires to waves</p>
        <div class="hero-chip-img-container"></div>
        <div class="hero-wave-img-container"></div>
      </div>
    </div>
    <div class="svg-rotate-trigger"></div>

    <script>
      import {
        animate,
        createTimeline,
        createTimer,
        utils,
        text,
        stagger,
        onScroll,
      } from "animejs";

      // const svgScrollAnimation = animate(".circle-group", {
      //   rotate: "1turn",
      //   ease: "linear",
      //   autoplay: onScroll({
      //     container: ".svg-container",
      //     target: ".svg-rotate-trigger",
      //     enter: "bottom top",
      //     leave: "+=100 top",
      //     sync: true,
      //     debug: true,
      //   }),
      // });

      const tl = createTimeline()
        .add(".circle-group", {
          opacity: 1,
          delay: stagger(500, { reversed: true }),
          duration: stagger(500, { start: 500 }),
        })
        .add(
          ".hero-chip-img-container",
          {
            scale: {
              from: "0",
              duration: 3000,
            },
            rotate: {
              to: "360deg",
              duration: 5000,
            },
          },
          2000
        );

      const scrolltl1 = createTimeline({
        autoplay: onScroll({
          container: ".svg-container",
          target: ".svg-rotate-trigger",
          enter: "bottom +=100",
          leave: "+=100 top",
          sync: true,
          // debug: true,
        }),
      })
        .add(".circle-group", {
          rotate: "1turn",
          ease: "linear",
          scale: "0",
        })
        .add(".hero-chip-img-container", {
          rotate: "1turn",
          ease: "linear",
          scale: "0",
        });

      // const tlMain = createTimeline()
      // .sync(tl)
      // .sync(scrolltl1)

      // .add(".circle-group", {
      //   rotate: "1turn",
      //   ease: "linear",
      //   autoplay: onScroll({
      //     container: ".svg-container",
      //     target: ".svg-rotate-trigger",
      //     enter: "bottom top",
      //     leave: "+=100 top",
      //     sync: true,
      //     debug: true,
      //   }),
      // });
    </script>
  </body>
</html>
